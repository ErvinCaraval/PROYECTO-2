name: Mover HU a In Progress

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  issues: write

jobs:
  move-hu-in-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Extraer número de HU desde la rama
        id: extract_hu
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          # Extrae el número de HU del nombre de la rama (ejemplo: hu-12-nombre)
          if [[ "$BRANCH_NAME" =~ hu-([0-9]+)- ]]; then
            echo "HU_NUMBER=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "No se encontró HU_NUMBER en la rama."
            exit 1
          fi

      - name: Mover la HU a la columna In Progress
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          IN_PROGRESS_OPTION_ID: 47fc9ee4
          STATUS_FIELD_ID: PVTSSF_lAHOCfyr_s4BFLg_zg2l7HM
        run: |
          HU_NUMBER=${{ steps.extract_hu.outputs.HU_NUMBER }}
          ISSUE_ID=$(gh issue view $HU_NUMBER --json id | jq -r '.id')
          PROJECT_ID=$(gh project list --owner "@me" --format json | jq -r '.projects[] | select(.title == "Product Backlog") | .id')
          CARD_ID=$(gh api graphql -f query='query($project:ID!, $content:ID!) { projectV2ItemById(projectId: $project, id: $content) { id } }' -f project="$PROJECT_ID" -f content="$ISSUE_ID" | jq -r '.data.projectV2ItemById.id')
          gh api graphql -f query='mutation($project:ID!, $item:ID!, $field:ID!, $option:ID!) { updateProjectV2ItemFieldValue(input: {projectId: $project, itemId: $item, fieldId: $field, value: {singleSelectOptionId: $option}}) { projectV2Item { id } } }' -f project="$PROJECT_ID" -f item="$CARD_ID" -f field="$STATUS_FIELD_ID" -f option="$IN_PROGRESS_OPTION_ID" || echo "No se pudo mover la HU a In Progress. Revisa el ID."
