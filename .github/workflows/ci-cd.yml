name: Frontend-v2 - CI/CD

on:
  workflow_call:

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    name: Test & Deploy Frontend-v2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend-v2/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      
      - name: Install dependencies
        run: npm ci
        working-directory: frontend-v2

     
      - name: Lint
        run: npm run lint
        working-directory: frontend-v2

     
      - name: Run unit tests
        run: npm run test:unit
        working-directory: frontend-v2

      - name: Build project
        run: npm run build
        working-directory: frontend-v2

      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: frontend-v2

      
      - name: Export Playwright Chromium path
        run: |
          node -e "(async()=>{const { chromium }=require('playwright'); const p=chromium.executablePath(); if(p){console.log(p)} else {console.error('no-chrome'); process.exit(1)} })()" > chrome-path.txt
          if [ -s chrome-path.txt ]; then echo "CHROME_PATH=$(cat chrome-path.txt)" >> $GITHUB_ENV; fi
        working-directory: frontend-v2

     
      - name: Run Lighthouse (LHCI)
        env:
          CHROME_PATH: ${{ env.CHROME_PATH }}
        run: |
          npm install -g @lhci/cli@0.8 || true
          echo "Using CHROME_PATH=$CHROME_PATH"
          npx http-server ./dist -p 8080 --silent &
          npx -y @lhci/cli@0.8 autorun --collect.url=http://localhost:8080 --upload.target=temporary-public-storage || (echo "LHCI failed - printing environment" && env)
        working-directory: frontend-v2

     
      - name: Run Playwright E2E tests
        run: npm run test:e2e
        working-directory: frontend-v2

      - name: Run visual tests
        run: npm run test:visual
        working-directory: frontend-v2

 
      - name: Run accessibility (a11y) tests
        run: npm run test:a11y
        working-directory: frontend-v2

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend-v2/playwright-report

      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: frontend-v2/reports/eslint.json

 
      - name: Auto-push generated changes
        if: success()
        run: |
          if [ "${{ secrets.ALLOW_AUTO_PUSH }}" = "true" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(ci): update generated artifacts [skip ci]" || echo "No changes to commit"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "Auto-push disabled. Set secret ALLOW_AUTO_PUSH=true to enable."
          fi
        working-directory: frontend-v2

     
      - name: Deploy to Vercel
        if: success()
        run: |
          if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
            npm i -g vercel
            npx vercel --prod --confirm --token "${{ secrets.VERCEL_TOKEN }}"
          else
            echo "VERCEL_TOKEN not set - skipping deploy"
          fi
        working-directory: frontend-v2
